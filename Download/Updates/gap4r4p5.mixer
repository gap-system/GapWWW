<?xml version="1.0" encoding="utf-8"?>
<mixer template="gw.tmpl">
<mixertitle><mixer var="GAP"/> 4.4 Update 5 (May 2005)</mixertitle>

<p>
Errors listed in <b>bold</b> may cause the system to return a wrong result
without issuing a warning, errors in <i>italics</i> can cause a system
crash. Other errors typically will lead to an error message and may cause
the abortion of a run but will not cause wrong results.
</p>

<!-- descriptions of fixes: -->
<h3>Fixed bugs</h3>
<ol>

<li>
<b>
<mixer manual="Reference: GroupWithGenerators"><span 
class="code">GroupWithGenerators</span></mixer> returned a meaningless group
object instead of signaling an error
when it was called with an empty list of generators.
</b>
</li>

<li>
A rare problem with the choice of prime in the Dixon-Schneider Algorithm
for computing the character table of a group. [Reported by Jack Schmidt]
</li>

<li>
<mixer manual="Reference: DirectProduct">
<span class="code">DirectProduct</span></mixer> for trivial permutation groups
returned a strange object.
</li>

<li>
<b>When computing preimages under an embedding into a direct product
of permutation groups,
if the element was not in the image of the embedding then
a permutation had been returned instead of <span class="code">fail</span>.</b>
</li>

<li>
A problem with <mixer manual="Reference: PolynomialReduction">
<span class="code">PolynomialReduction</span></mixer> running into
an infinite loop.
</li>

<li>
Adding linear mappings with different image domains was not possible. [Reported by Pasha Zusmanovich]
</li>

<li>
Multiplying group ring elements with rationals was not possible. [Reported by Laurent Bartholdi]
</li>

<li>
<mixer manual="Reference: Random for a list or collection">
<span class="code">Random</span></mixer> now works for finite fields of size
larger than 2<sup>28</sup>. [Reported by Jack Schmidt]
</li>

<li>
<b>Two problems with <mixer manual="Reference: PowerMod">
<span class="code">PowerMod</span></mixer> for polynomials. [Reported by Jack Schmidt]</b>
</li>

<li>
Univariate polynomial creators did modify the coefficient list passed. [Reported by Juergen Mueller]
</li>

<li>
<b>Some methods for computing the sum of ideals returned the first summand
instead of the sum. [Reported by Alexander Konovalov]</b>
</li>

<li>
<i>Some code and comments in the <span class="pkgname">GAP</span>
kernel assumed that there is no garbage
collection during the core printing function <span class="code">Pr</span>, 
which is not correct.
This could cause  <span class="pkgname">GAP</span> in rare cases to 
crash during printing permutations, cyclotomics or strings with zero bytes. [Reported by Warwick Harvey]</i>
</li>

<li>
Fixed <mixer manual="Reference: IntHexString">
<span class="code">IntHexString</span></mixer> to accept 
arguments not in <span class="code">IsStringRep</span>; the argument is
now first converted if necessary. [Reported by Kenn Heinrich]
</li>

<li>
<b>Wrong result in <mixer manual="Reference: Intersection">
<span class="code">Intersection</span></mixer> for PC groups.</b>
</li>

<li>
<b>The function <mixer manual="Reference: CompareVersionNumbers">
<span class="code">CompareVersionNumbers</span></mixer> erroneously
ignored leading non-digit characters.
<br />
A new feature in the corrected version is an optional third argument
<span class="code">"equal"</span>, which causes the function to return
<span class="code">true</span> only if the first two arguments describe
equal version numbers;
documentation is available in the ext-manual.
This new feature is used in <mixer manual="Reference: LoadPackage">
<span class="code">LoadPackage</span></mixer>,
now one can require a specific version of a package.
<br />
The library code still contained parts of the handling of completion files
for packages, which does not work and therefore had already been removed
from the documentation.
This code has now been removed.
<br />
Now a new component <span class="code">PreloadFile</span> is supported in
<mixer manual="Reference: The PackageInfo.g File">
<span class="code">PackageInfo.g</span></mixer> files;
if it is bound then the file in question is read immediately before the
package or its documentation is loaded.</b>
</li>

<li>
The library code for stabilizer chains contained quite some
explicit references to the identity <span class="code">()</span>.
This is unfortunate if one works with permutation groups, the
elements of which are not plain permutations but objects which
carry additional information like a memory, how they were obtained
from the group generators. For such cases it is much cleaner to
use the <span class="code">One(...)</span> operation instead of
<span class="code">()</span>, such that the library code can be
used for a richer class of group objects. This fix contains only
rather trivial changes <span class="code">()</span> to 
<span class="code">One(...)</span> which were carefully checked by me. The
tests for permutation groups all run without a problem. However, it is
relatively difficult to provide test code for this particular change,
since the "improvement" only shows up when one generates new group
objects. This is for example done in the package 
<span class="pkgname">recog</span> which is in preparation. [Reported by Akos Seress and Max Neunhoeffer]
</li>

<li>

Using <span class="code">{}</span> to select elements of a known 
inhomogenous dense list
produced a list that might falsely claim to be known inhomogenous,
which could lead to a segfault if the list typing code tried to mark
it homogenous, since the code intended to catch such errors also had a bug.
 [Reported by Steve Linton]
</li>

<li>
The record for the generic iterator construction of subspaces domains
of non-row spaces was not complete.
</li>

<li>
<b>The result of <mixer manual="Reference: String">
<span class="code">String</span></mixer> for strings not in
<mixer manual="Reference: IsStringRep">
<span class="code">IsStringRep</span></mixer> that occur as list entries
or record components was erroneously missing the doublequotes around the
strings.</b>
</li>

<li>
<b>This bug causes <mixer manual="Reference: InducedPcgs">
<span class="code">InducedPcgs(pcgs, H)</span></mixer> to return a pcgs
which is not induced wrt. the parent pcgs of <span class="code">pcgs</span>. 
This may cause unpredictable behaviour, e.&nbsp;g. when 
<span class="code">SiftedPcElement</span> is used subsequently. [Reported by Alexander Konovalov]</b>
</li>

<li>
<b>Fixed a bug in 
<span class="code">SmallGroupsInformation(512)</span>.</b>
</li>

<li>
<b><mixer manual="Reference: PowerModCoeffs">
<span class="code">PowerModCoeffs</span></mixer> with exponent 
1 for compressed vectors
did not reduce (a copy of) the input vector before returning it.
 [Reported by Frank Luebeck]</b>
</li>

<li>
<b>Sorting a mutable non-plain list (e.g., a compressed matrix over 
fields of order &lt; 257) could potentially destroy that object. [Reported by Alexander Hulpke]</b>
</li>

<li>
When a workspace has been created without packages
(<span class="code">-A</span> option) and is loaded into a 
<span class="pkgname">GAP</span> session without packages (same option)
then an error message is printed.
</li>

<li>
So far the functions <mixer manual="Reference: IsPrimeInt">
<span class="code">IsPrimeInt</span></mixer> and 
<mixer manual="Reference: IsProbablyPrimeInt">
<span class="code">IsProbablyPrimeInt</span></mixer> are essentially the
same except that <span class="code">IsPrimeInt</span> issues an additional 
warning when (non-proven) probable primes are considered as primes.
<br />
These warnings now print the probable primes in question as well;  if a 
probable prime is used several times then the warning is also printed
several times; there is no longer a warning for some known large primes;
the warnings can be switched off. See 
<mixer manual="Reference: IsPrimeInt">
<span class="code">?Ref: IsPrimeInt</span></mixer> for more details.
<br />
If we get a reasonable primality test in <span class="pkgname">GAP</span>
we will change the definition of <span class="code">IsPrimeInt</span>
to do a proper test.

</li>

<li>
Corrected some names of primitive groups in degree 26. [Reported by Robert F Bailey]
</li>

<li>
<b>Under rare circumstances computing
the closure of a permutation group by a normalizing element could produce a
corrupt stabilizer chain. (The underlying algorithm uses random elements,
probability of failure was below 1 percent) [Reported by Thomas Breuer]</b>
</li>
</ol>



<!-- descriptions of new features: -->
<h3>New or improved functionality</h3>
<ol>

<li>
Several changes for <mixer manual="Reference: ConwayPolynomial">
<span class="code">ConwayPolynomial</span></mixer>:
<ul>
<li> many new pre-computed polynomials </li>
<li> put data in several separate files (only read when needed) </li>
<li> added info on origins of pre-computed polynomials </li>
<li> improved performance of <mixer manual="Reference: ConwayPolynomial">
<span class="code">ConwayPolynomial</span></mixer> and 
<mixer manual="Reference: IsPrimitivePolynomial">
<span class="code">IsPrimitivePolynomial</span></mixer> for p &lt; 256  </li>
<li> improved documentation of <span class="code">ConwayPolynomial</span> </li>
<li> added and documented new functions 
<mixer manual="Reference: IsCheapConwayPolynomial">
<span class="code">IsCheapConwayPolynomial</span></mixer> and
<mixer manual="Reference: RandomPrimitivePolynomial">
<span class="code">RandomPrimitivePolynomial</span></mixer>  </li>
</ul>
</li>

<li>
Added method for <mixer manual="Reference: NormalBase">
<span class="code">NormalBase</span></mixer> for extensions of finite fields.
</li>

<li>
Added more help viewers for the HTML version of the documentation (firefox,
mozilla, konqueror, w3m, safari).
</li>

<li>
New function <mixer manual="Reference: ColorPrompt">
<span class="code">ColorPrompt</span></mixer>. (Users of former versions
of a <span class="code">colorprompt.g</span> file: Now you just need a 
<span class="code">ColorPrompt(true);</span> in your 
<span class="code">.gaprc</span> file.)
</li>

<li>

Specialised kernel functions to support <span class="pkgname">GUAVA
2.0</span>.  <span class="pkgname">GAP</span> will only load <span
class="pkgname">GUAVA</span> in version at least 2.002 after this update.

</li>

<li>
Now there is a kernel function <span class="code">CYC_LIST</span>
for converting a list of rationals into a cyclotomic,
without arithmetics overhead.
</li>

<li>
New functions <mixer manual="Reference: ContinuedFractionExpansionOfRoot">
<span class="code">ContinuedFractionExpansionOfRoot</span></mixer> and
<mixer manual="Reference: ContinuedFractionApproximationOfRoot">
<span class="code">ContinuedFractionApproximationOfRoot</span></mixer> 
for computing continued
fraction expansions and continued fraction approximations of real roots
of polynomials with integer coefficients.
</li>

<li>
A method for computing structure descriptions for finite groups,
available via <mixer manual="Reference: StructureDescription">
<span class="code">StructureDescription</span></mixer>.
</li>

<li>
This change contains the new, extended version of the 
<span class="pkgname">SmallGroups</span>  package.
For example, the groups of orders p<sup>4</sup>, p<sup>5</sup>, p<sup>6</sup> 
for arbitrary primes p, the
groups of square-free order and the groups of cube-free order at most 50000
are included now. For more detailed information see the announcement of the
extended package. 
</li>

<li>
The function <span class="code">ShowPackageVariables</span> gives
an overview of the global variables in a package.
It is thought as a utility for package authors and referees.
(It uses the new function <span class="code">IsDocumentedVariable</span>.)
</li>

<li>
The mechanisms for testing <span class="pkgname">GAP</span> has been improved:
<ul>
<li> The information whether a test file belongs to the list in
  <span class="code">tst/testall.g</span> is now stored in the test file
  itself.</li>
<li> Some targets for testing have been added to the
  <span class="code">Makefile</span> in the GAP root directory,
  the output of the tests goes to the new directory
  <span class="code">dev/log</span>.</li>
<li> Utility functions for testing are in the new file
  <span class="code">tst/testutil.g</span>.
  Now the loops over (some or all) files <span class="code">tst/*.tst</span>
  can be performed with a function call, and the file
  <span class="code">tst/testall.g</span> can be created automatically;
  the file <span class="code">tst/testfull.g</span> is now obsolete.
  The remormalization of the scaling factors can now be done using a GAP
  function, so the file <span class="code">tst/renorm.g</span> is
  obsolete.</li>
<li> Now the functions <span class="code">START_TEST</span>
  and <span class="code">STOP_TEST</span> use components in 
  <span class="code">GAPInfo</span> instead of own globals,
  and the random number generator is always reset in
  <span class="code">START_TEST</span>.</li>
<li> <span class="code">GAPInfo.SystemInformation</span> now takes two
  arguments, now one can use it easier in the tests.</li>
</ul>
</li>

<li>
<mixer manual="Reference: MultiplicationTable">
<span class="code">MultiplicationTable</span></mixer> is now an attribute,
and the construction of a magma, monoid, etc. from multiplication tables
has been unified.
</li>
</ol>

</mixer>
