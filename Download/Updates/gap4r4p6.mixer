<?xml version="1.0" encoding="utf-8"?>
<mixer template="gw.tmpl">
<mixertitle><mixer var="GAP"/> 4.4 Update 6 (September 2005)</mixertitle>

<p>
Attribution  of bugfixes  and  improved functionalities  to those  who
reported or  provided these, respectively, is  still fairly incomplete
and inconsistent with this update. We apologise for this fact and will
discuss until the next update how to improve this feature.
</p>

<h3>Fixed bugs which could produce wrong results</h3>
<ol>

<li>
The perfect group library does not contain any information on the trivial
group, so the trivial group must be handled specially.
<mixer manual="Reference: PerfectGroup"><span class="code">
PerfectGroup</span></mixer> and
<span class="code">NrPerfectLibraryGroups</span> were changed
to indicate that the trivial group is not part of the library.
</li>

<li>
The descriptions of <span class="code">PerfectGroup(734832,3)</span>
and <span class="code">PerfectGroup(864000,3)</span> were corrected
in the <mixer manual="Reference: Finite Perfect Groups">library of perfect
groups</mixer>.
</li>

<li>
The functions 
<mixer manual="Reference: EpimorphismSchurCover"><span class="code">
EpimorphismSchurCover</span></mixer> and
<mixer manual="Reference: AbelianInvariantsMultiplier"><span class="code">
AbelianInvariantsMultiplier</span></mixer>
may have produced wrong results without warning. [Reported by Colin Ingalls].
These problems are fixed.
However, the methods currently used can be expected to be slower than the
ones used before;
we hope to fix this for the next version of
<span class="pkgname">GAP</span>.
</li>

<li>
<mixer manual="Reference: DerivedSubgroup"><span class="code">
DerivedSubgroup</span></mixer> and 
<mixer manual="Reference: CommutatorSubgroup"><span class="code">
CommutatorSubgroup</span></mixer> for permutation groups sometimes returned
groups with an incorrect stabilizer chain due to a missing verification
step after a random Schreier Sims.
</li>

<li>
<mixer manual="Reference: NaturalHomomorphismByNormalSubgroup">
<span class="code">NaturalHomomorphismByNormalSubgroup</span>
</mixer> for FpGroups did unnecessary rewrites.
</li>

<li>
The alternating group A3 incorrectly claimed to be not simple.
</li>

<li>
<mixer manual="Reference: ExponentSyllable"><span class="code">
ExponentSyllable</span></mixer> for straight line program elements
gave a wrong result.

</li>

<li>
<mixer manual="Reference: PrimePGroup"><span class="code">
PrimePGroup</span></mixer> is defined to return <span class="code">fail</span> 
for trivial groups, but if the group was constructed as a 
factor or subgroup of a known p-group, the value of p
was retained.
</li>

<li>
The functions <mixer manual="Reference: TestPackageAvailability"><span 
class="code">TestPackageAvailability</span></mixer>
and <mixer manual="Reference: LoadPackage"><span class="code">
LoadPackage</span></mixer> did not work correctly when one asked for a 
particular version of the package, via a version number starting with
the character <span class="code">=</span>, in the sense that a version
with a larger version number was loaded if it was available. 
[Reported by Burkhard Höfling]
</li>

<li>
The generator names constructed by
<mixer manual="Reference: AlgebraByStructureConstants"><span class="code">
AlgebraByStructureConstants</span></mixer> were nonsense.
</li>

<li>
The undocumented function (but recently advertised on gap-dev) 
<mixer manual="Reference: CopyListEntries"><span class="code">
COPY_LIST_ENTRIES</span></mixer> did not handle overlapping source and
destination areas correctly in some cases.
</li>

<li>
The elements in a free magma ring have the filter
<mixer manual="Reference: IsAssociativeElement"><span class="code">
IsAssociativeElement</span></mixer> set
whenever the elements in the underlying magma and in the coefficients ring
have this filter set. [Reported by Randy Cone]
</li>

<li>
The function <mixer manual="Reference: InstallValue"><span class="code">
InstallValue</span></mixer> must not be used for
objects in the filter <span class="code">IsFamily</span> because these
objects are compared via <mixer manual="Reference: IsIdenticalObj"><span 
class="code">IsIdenticalObj</span></mixer>. [Reported by Max Neunhöffer]
</li>

</ol>


<h3>Fixed bugs which could lead to crashes</h3>
<ol>

<li>
Problem in composition series for permutation groups for non-Frobenius
groups with regular point stabilizer.
</li>

<li>
After lots of computations with compressed GF(2) vectors 
<span class="pkgname">GAP</span> occasionally
crashed. The reason were three missing 
<span class="code">CHANGED_BAG</span>s in <span class="code">
SemiEchelonPListGF2Vecs</span>.
They were missing, because a garbage collection could be triggered during
the computation such that newly created bags could become "old".
It is not possible to provide test code because the error condition
cannot easily be reproduced. [Reported by Klaus Lux]
</li>

<li>
Minor bug that crashed <span class="pkgname">GAP</span>:
The type of <span class="code">IMPLICATIONS</span>
could not be determined in a fresh session. [Reported by Marco Costantini]
</li>

<li>
<mixer manual="Reference: Assert"><span class="code">Assert</span></mixer>
caused an infinite loop if called
as the first line of a function called from another function. 
</li>
</ol>


<h3>Other fixed bugs</h3>
<ol>

<li>
Wrong choice of prime in Dixon-Schneider if prime is bigger than group order
(if group has large exponent).
</li>

<li>
Groebner basis code ran into problems when comparing monomial orderings.
</li>

<li>
When testing for conjugacy of a primitive group to an imprimitive group,
<span class="pkgname">GAP</span> runs into an error in EARNS calculation. [Reported by John Jones]
</li>

<li>
The centre of a magma is commonly defined to be the set of elements that
commute and associate with all elements. The previous definition left out
'associate' and caused problems with extending the functionality to
nonassociative loops. [Reported by Petr Vojtechovsky]
</li>

<li>
New kernel methods for taking the intersection and difference between
sets of substantially different sizes give a big performance increase.
</li>

<li>
The commands
<mixer manual="Reference: IsNaturalSymmetricGroup"><span class="code">
IsNaturalSymmetricGroup</span></mixer> and
<mixer manual="Reference: IsNaturalAlternatingGroup"><span class="code">
IsNaturalAlternatingGroup</span></mixer> are faster and should run much less
often into inefficient tests.
</li>

<li>
The <mixer manual="Reference: Finite Perfect Groups">perfect group library
</mixer> is split into several files which are loaded and
unloaded to keep memory usage down.
The global variable <span class="code">PERFSELECT</span> is a blist which
indicates which orders are currently loaded. An off-by-one error wrongly added
the last order of the previous file into the list of valid orders when a new
file was loaded. A subsequent access to this order raises an error.
</li>

<li>
Up to now, the method installed for testing the membership of rationals
in the field of rationals via
<mixer manual="Reference: IsRat"><span class="code">IsRat</span></mixer>
was not called; instead a more general method was used that called
<mixer manual="Reference: Conductor for a cyclotomic"><span class="code">
Conductor</span></mixer> and thus was much slower.
Now the special method has been ranked up by changing the requirements
in the method installation.
</li>

<li>
Fixed a bug in <span class="code">APPEND_VEC8BIT</span>, 
which was triggered in the following
situation: Let e be the number of field elements stored in one byte.
If a compressed 8bit-vector v had length not divisible by e and
another compressed 8bit-vector w was appended, such that the sum of
the lengths became divisible by e, then one 0 byte too much was written
which destroyed the <span class="code">TNUM</span> of the next 
<span class="pkgname">GAP</span> object in memory. [Reported by Klaus Lux]
</li>

<li>
<mixer manual="Reference: PermutationCycle"><span class="code">
PermutationCycle</span></mixer> returned <span class="code">fail</span> if the
cycle was not a contiguous subset of the specified domain. [Reported by Luc Teirlinck]
</li>

<li>
Now <mixer manual="Reference: Inverse"><span class="code">Inverse</span></mixer>
correctly returns <span class="code">fail</span> for zeros in finite fields
(and does no longer enter a break loop).
</li>

<li>
Up to now, <mixer manual="Reference: CharacterDegrees"><span class="code">
CharacterDegrees</span></mixer> ignored the attribute
<mixer manual="Reference: Irr"><span class="code">Irr</span></mixer>
if the argument was a group that knew that it was solvable.
</li>

<li>
The function <span class="code">Debug</span> now prints a meaningful message
if the user tries to debug an operation.
Also, the help file for <span class="code">vi</span> is now available in
the case of several <span class="pkgname">GAP</span> root directories.
</li>

<li>
It is no longer possible to create corrupt objects via ranges of length
&gt;2^28, resp. &gt;2^60 (depending on the architecture). The limitation
concerning the arguments of ranges is documented. [Reported by Stefan Kohl]
</li>

<li>
Now <mixer manual="Reference: IsElementaryAbelian"><span class="code">
IsElementaryAbelian</span></mixer> and
<mixer manual="Reference: ClassPositionsOfMinimalNormalSubgroups"><span 
class="code">ClassPositionsOfMinimalNormalSubgroups</span></mixer>
are available for ordinary character tables.
Now the operation
<mixer manual="Reference: CharacterTableIsoclinic"><span class="code">
CharacterTableIsoclinic</span></mixer> is an attribute,
and there is another new attribute
<mixer manual="Reference: SourceOfIsoclinicTable"><span class="code">
SourceOfIsoclinicTable</span></mixer> that points back to the
original table;
this is used for computing the Brauer tables of those tables in the character
table library that are computed using
<span class="code">CharacterTableIsoclinic</span>.
Now <mixer manual="Reference: ClassPositionsOfDerivedSubgroup"><span 
class="code">ClassPositionsOfDerivedSubgroup</span></mixer> avoids calling
<mixer manual="Reference: Irr"><span class="code">Irr</span></mixer>,
since <mixer manual="Reference: LinearCharacters"><span class="code">
LinearCharacters</span></mixer> is sufficient.
Now <mixer manual="Reference: ClassPositionsOfElementaryAbelianSeries"><span 
class="code">ClassPositionsOfElementaryAbelianSeries</span></mixer>
works also for the table of the trivial group.
Restrictions of character objects know that they are characters.
<br/>

A few formulations in the documentation concerning character tables have
been improved slightly.
</li>

<li>
Up to now, <mixer manual="Reference: IsPGroup"><span class="code">
IsPGroup</span></mixer> has rarely been set. Now many basic operations
such as <mixer manual="Reference: SylowSubgroup"><span class="code">
SylowSubgroupOp</span></mixer> set this attribute on the returned result.
</li>

<li>
Computing an enumerator for a semigroup required too much time
because it used all elements instead of the given generators. [Reported by Manuel Delgado]
</li>

<li>
Avoid potential error message when working with automorphism groups.
</li>

<li>
Fixed wrong page references in manual indices.
</li>

<li>
Make <span class="code">MutableCopyMat</span> an operation and install 
the former function which does call 
<mixer manual="Reference: List for a list (and a function)">
<span class="code">List</span></mixer> with
<mixer manual="Reference: ShallowCopy"><span class="code">
ShallowCopy</span></mixer> the default method for lists. Also
use this in a few appropriate places.
</li>

<li>
An old DEC compiler doesn't like C preprocessor directives that are 
preceded by whitespace. Removed such whitespace. [Reported by Chris Wensley]
</li>

</ol>


<h3>New or improved functionality</h3>
<ol>

<li>
The <mixer manual="Reference: Primitive Permutation Groups">primitive groups
    library</mixer> has been extended to degree 2499.
</li>

<li>
New operation 
<mixer manual="Reference: Remove"><span class="code">Remove</span></mixer>
and extended functionality of
<mixer manual="Reference: Add"><span class="code">Add</span></mixer> with
an optional argument giving the position of the insertion. They are based
on an efficient kernel function 
<mixer manual="Reference: CopyListEntries">
<span class="code">COPY_LIST_ENTRIES</span></mixer>.
</li>

<li>
Added fast kernel implementation of Tarjan's 
algorithm for strongly connected components of a 
directed graph. 
</li>

<li>
Now <mixer manual="Reference: IsProbablyPrimeInt"><span class="code">
IsProbablyPrimeInt</span></mixer> can be used with larger numbers. 
(Made internal function <span class="code">TraceModQF</span> non-recursive.)
</li>

<li>
A new operation <mixer manual="Reference: PadicValuation"><span class="code">
PadicValuation</span></mixer> and a corresponding method for rationals.
</li>

<li>
A new operation <mixer manual="Reference: PartialFactorization"><span 
class="code">PartialFactorization</span></mixer> has been
added, and a corresponding method for integers has been installed.
This method allows one to specify the amount of work to be spent on looking
for factors.
</li>

<li>
The generators of full s. c. algebras can now be accessed with the dot
operator. [Reported by Marcus Bishop]
</li>

<li>
New Conway polynomials computed by Kate Minola, John Bray, Richard Parker.
</li>

<li>
A new attribute <mixer manual="Reference: EpimorphismFromFreeGroup"><span 
class="code">EpimorphismFromFreeGroup</span></mixer>.
The code has been written by Alexander Hulpke.
</li>

<li>
The functions
<mixer manual="Reference: Lambda"><span class="code">Lambda</span></mixer>,
<mixer manual="Reference: Phi"><span class="code">Phi</span></mixer>,
<mixer manual="Reference: Sigma"><span class="code">Sigma</span></mixer>, and
<mixer manual="Reference: Tau"><span class="code">Tau</span></mixer>
have been turned into operations, to admit the installation of methods
for arguments other than integers.
</li>

<li>
Up to now, one could assign only lists with
<mixer manual="Reference: InstallFlushableValue"><span class="code">
InstallFlushableValue</span></mixer>.
Now also records are admitted.
</li>

<li>
<mixer manual="Reference: InstallMethod"><span class="code">
InstallMethod</span></mixer> now admits entering a list of
strings instead of a list of required filters.
Each such string must evaluate to a filter when used as the argument of
<mixer manual="Reference: EvalString"><span class="code">
EvalString</span></mixer>.
The advantage of this variant is that these strings are used to compose
an info string (which is shown by <span class="code">ApplicableMethod</span>)
that reflects exactly the required filters.
</li>

<li>
In test files that are read with <span class="code">ReadTest</span>,
the assertion level is set to 2 between <span class="code">START_TEST</span>
and <span class="code">STOP_TEST</span>.
This may result in runtimes for the tests that are substantially longer
than the usual runtimes with default assertion level 0.
In particular this is the reason why some of the standard test files require
more time in <span class="pkgname">GAP</span> 4.4.6 than in
<span class="pkgname">GAP</span> 4.4.5.
</li>

<li>
Some very basic functionality for floats.
</li>

</ol>


</mixer>
