<?xml version="1.0" encoding="ISO-8859-1"?>
<mixer template="gw.tmpl">
<mixertitle><mixer var="GAP"/> 4.4 Update 11 (December 2008)</mixertitle>

<h3>Fixed bugs which could produce wrong results</h3>
<ol>

<li>
<mixer manual="Reference: MemoryUsage"><span class="code">MemoryUsage</span></mixer> on objects with no subobjects left them in the cache and
thus reported 0 in subsequent calls to MemoryUsage for the same
object. [Reported by Stefan Kohl]
</li>

<li>
<mixer manual="Reference: Irr"><span class="code">Irr(G)</span></mixer> might be missing characters. [Reported by Angel del Rio]
</li>

<li>
Up to now, it was allowed to call the function
<mixer manual="Reference: FullMatrixAlgebraCentralizer">
<span class="code">FullMatrixAlgebraCentralizer</span></mixer>
with a field and a list of matrices such that the entries of the matrices
were not contained in the field;
in this situation, the result did not fit to the documentation.
Now the entries of the matrices are required to lie in the field,
if not then an error is signaled.
</li>

<li>
For those finite fields that are regarded as field extensions over
non-prime fields (one can construct such fields with
<mixer manual="Reference: AsField"><span class="code">AsField</span></mixer>),
the function <mixer manual="Reference: DefiningPolynomial">
<span class="code">DefiningPolynomial</span></mixer>
erroneously returned a polynomial w.r.t. the extension of the prime field. [Reported by Stefan Kohl]
</li>

<li>
Since the release of <span class="pkgname">GAP</span> 4.4.10,
the return values of the function
<mixer manual="Reference: QuaternionAlgebra">
<span class="code">QuaternionAlgebra</span></mixer>
were not consistent w.r.t. the attribute
<mixer manual="Reference: GeneratorsOfAlgebra">
<span class="code">GeneratorsOfAlgebra</span></mixer>;
the returned list could have length four or five.
Now always the list of elements of the canonical basis is returned.
</li>

<li>
<mixer manual="Reference: MonomialGrevlexOrdering"><span class="code">MonomialGrevlexOrdering</span></mixer> calculated a wrong ordering in certain cases. [Reported by Paul Smith]
</li>

<li>
The (<span class="pkgname">GAP</span> kernel) method for the operation
<mixer manual="Reference: IntersectSet">
<span class="code">IntersectSet</span></mixer> for ranges had two bugs,
which could yield a result range with either too few or too many elements.
As a consequence, for example the <mixer manual="Reference: Intersection">
<span class="code">Intersection</span></mixer> results for ranges could be
wrong. [Reported by Matthew Fayers]
</li>

<li>
Fixed a bug in the short-form display of elements of larger finite fields, a bug in some
cross-field conversions and some inefficiencies and a missing method in the <mixer manual="Reference: LogFFE"><span class="code">LogFFE</span></mixer> code. [Reported by Jia Huang]
</li>

<li>
In rare cases <mixer manual="Reference: SmithNormalFormIntegerMatTransforms">
<span class="code">SmithNormalFormIntegerMatTransforms</span></mixer>
returned a wrong normal form (the version without transforming matrices 
did not have this problem). This is fixed. [Reported by AH]
</li>

<li>
The variant of the function 
<mixer manual="Reference: StraightLineProgram for a string and a list of generators names">
<span class="code">StraightLineProgram</span></mixer> that takes a string
as its first argument returned wrong results if the last character of this
string was a closing bracket.
</li>

<li>
The code for central series in a permutation group used too tight a bound
and thus falsely return a nilpotent permutation group as non-nilpotent.
</li>
</ol>


<h3>Fixed bugs which could lead to crashes</h3>
<ol>

<li>
Under certain circumstances the kernel code for position in blists
would access a memory location just after the end of the blist. If
this location was not accessible, a crash could result. This was corrected
and the code was cleaned up. [Reported by AH]
</li>
</ol>


<h3>Other fixed bugs</h3>
<ol>

<li>
The function <mixer manual="Reference: IsomorphismTypeInfoFiniteSimpleGroup">
<span class="code">IsomorphismTypeInfoFiniteSimpleGroup</span></mixer>
can be called with a positive integer instead of a group,
and then returns information about the simple group(s) of this order.
(This feature is currently undocumented.)
For the argument 1, however, it ran into an infinite loop.
</li>

<li>
A lookup in an empty dictionary entered a break loop. Now returns 'fail'. [Reported by Laurent Bartholdi]
</li>

<li>
The c++ keyword 'and' is no longer be used as a macro parameter in the
kernel. [Reported by Paul Smith]
</li>

<li>
The operation <mixer manual="Reference: KernelOfMultiplicativeGeneralMapping">
<span class="code">KernelOfMultiplicativeGeneralMapping</span></mixer> has
methods designed to handle maps between permutation groups in a two-step approach,
but did not reliably trigger the second step.  This has now been fixed, preventing
a slow infinite loop repeating the first step.  This was normally only seen
as part of a larger calculation.
</li>

<li>
There were two methods for the operation
<mixer manual="Reference: Intersection2">
<span class="code">Intersection2</span></mixer> which have implicitly assumed
that finiteness of a collection can always be decided. Now, these methods
check for <mixer manual="Reference: IsFinite">
<span class="code">HasIsFinite</span></mixer> and
<mixer manual="Reference: CanComputeSize">
<span class="code">CanComputeSize</span></mixer> prior to calling
<mixer manual="Reference: IsFinite">
<span class="code">IsFinite</span></mixer>.
</li>

<li>
Made error message in case of corrupted help book information
(manual.six file) shorter and more informative.  [Reported by AH]
</li>

<li>
<span class="pkgname">GAP</span> cannot call methods with more than six
arguments.
Now the functions <mixer manual="Reference: NewOperation">
<span class="code">NewOperation</span></mixer>,
<mixer manual="Reference: DeclareOperation">
<span class="code">DeclareOperation</span></mixer>, and
<mixer manual="Reference: InstallMethod">
<span class="code">InstallMethod</span></mixer>
signal an error if one attempts to declare an operation or to install
a method with more than six arguments.
</li>

<li>
Up to now, <mixer manual="Reference: IsOne">
<span class="code">IsOne</span></mixer> had a special method for general
mappings, which was much worse than the generic method;
this special method has now been removed.
</li>

<li>
When printing elements of an algebraic extension parentheses around
coefficients were missing. [Reported by Maxim Hendriks]
</li>
</ol>


<h3>New or improved functionality</h3>
<ol>

<li>
Make dynamic loading of modules possible on CYGWIN using a DLL based
approach. Also move to using autoconf version 2.61.
</li>

<li>
One can now call
<mixer manual="Reference: Basis"><span class="code">Basis</span></mixer>,
<mixer manual="Reference: Iterator"><span class="code">Iterator</span></mixer>
etc. with the return value of the function
<mixer manual="Reference: AlgebraicExtension">
<span class="code">AlgebraicExtension</span></mixer>.
</li>

<li>
The function <mixer manual="Reference: FrobeniusCharacterValue">
<span class="code">FrobeniusCharacterValue</span></mixer>
returned <span class="code">fail</span> for results that require
a finite field with more than 65536 elements.
Meanwhile <span class="pkgname">GAP</span> can handle larger finite fields,
so this restriction was removed.
(It is still possible that
<mixer manual="Reference: FrobeniusCharacterValue">
<span class="code">FrobeniusCharacterValue</span></mixer>
returns <span class="code">fail</span>.)
</li>

<li>
Methods for testing membership in general linear groups and special linear
groups over the integers have been added. 
</li>

<li>
Methods for <mixer manual="Reference: String">
<span class="code">String</span></mixer> and
<span class="code">ViewString</span> for full row modules have
been added. Further, a default method for
<mixer manual="Reference: IsRowModule">
<span class="code">IsRowModule</span></mixer> has been
added, which returns 
<span class="code">false</span> for objects
which are not free left modules.
</li>

<li>
A <span class="code">ViewString</span> method for objects with name
has been added.
</li>

<li>
The method for <mixer manual="Reference: View">
<span class="code">View</span></mixer>
for polynomial rings has been improved, and methods for
<mixer manual="Reference: String">
<span class="code">String</span></mixer> and
<span class="code">ViewString</span> for polynomial rings
have been added.
</li>

<li>
<mixer manual="Reference: Binomial"><span
class="code">Binomial(n, k)</span></mixer> now works with huge <span
class="code">n</span>.
</li>

<li>
The function <mixer manual="Reference: InducedClassFunctionsByFusionMap">
<span class="code">InducedClassFunctionsByFusionMap</span></mixer>
is now documented.
</li>

<li>
The return values of the function
<mixer manual="Reference: QuaternionAlgebra">
<span class="code">QuaternionAlgebra</span></mixer>
now store that they are division rings (if optional parameters are given
then of course ths depends on these parameters).
</li>
</ol>





</mixer>
