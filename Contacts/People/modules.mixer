<?xml version="1.0" encoding="ISO-8859-1"?>

<mixer template="gw.tmpl">
<mixertitle><mixer var="GAP"/> Modules</mixertitle>

<p>
  This  is a  list  of all  accepted  modules. It  names the  original
  authors  as well  as the  present maintainers.  If no  maintainer is
  named  the  module  is  maintained   by  the  whole  of  the  
  <mixer var="GAP"/> Group in the same way as the rest of the
  <mixer var="GAP"/> library.
</p>

<ul>
  <li> <strong>Permutation Group Pcgs</strong>
       <em> &nbsp;&nbsp;by Heiko Theissen,<br />
       maintained by 
       <mixer person="Alexander Hulpke" data="name_link_city"/>
       </em><br />
       This code provides the solvable permgroup stabilizer chain and
       (modulo) pcgs data structures for permutation groups.
       <br />&nbsp;
  </li> 

  <li> <strong>Dixon-Schneider Algorithm</strong>
       <em> &nbsp;&nbsp;by Alexander Hulpke,<br/>
       maintained by 
       <mixer person="Alexander Hulpke" data="name_link_city"/>
       </em><br />
       Dixon/Schneider algorithm for ordinary character tables of
       finite groups.
       <br />&nbsp;
  </li> 

  <li> <strong>Classes in nonsolvable groups</strong>
       <em> &nbsp;&nbsp;by Alexander Hulpke,<br/>
       maintained by
       <mixer person="Alexander Hulpke" data="name_link_city"/>
       </em><br />
       Conjugacy classes for nonsolvable groups (homomorphism
       principle/subgroups of wreath products).
       <br />&nbsp;
  </li> 

  <li> <strong>Homomorphism search</strong>
       <em> &nbsp;&nbsp;by Alexander Hulpke,<br/>
       maintained by 
       <mixer person="Alexander Hulpke" data="name_link_city"/>
       </em><br />
       Search for Homomorphisms between two groups.
       <br />&nbsp;
  </li> 

  <li> <strong>Subgroup lattice for solvable groups</strong>
       <em> &nbsp;&nbsp;by Alexander Hulpke,<br/>
       maintained by
       <mixer person="Alexander Hulpke" data="name_link_city"/>
       </em><br />
       (Invariant) subgroups of a solvable group by homomorphism
       principle.
       <br />&nbsp;
  </li> 

  <li> <strong>Transitive groups library</strong>
       <em> &nbsp;&nbsp;by Alexander Hulpke,<br/>
       maintained by 
       <mixer person="Alexander Hulpke" data="name_link_city"/>
       </em><br />
       Access to the library of transitive permutation groups of small
       degree.
       <br />&nbsp;
  </li> 

  <li> <strong>Cosets and Double Cosets</strong>
       <em> &nbsp;&nbsp;by Alexander Hulpke,<br/>
       maintained by 
       <mixer person="Alexander Hulpke" data="name_link_city"/>
       </em><br />
       Basic functions for cosets and to compute double cosets.
       <br />&nbsp;
  </li> 

  <li> <strong>Factor groups</strong>
       <em> &nbsp;&nbsp;by Alexander Hulpke,<br/>
       maintained by  
       <mixer person="Alexander Hulpke" data="name_link_city"/>
       </em><br />
       (Heuristic) routines to compute faithful permutation
       representations of factor groups, in particular for nonsolvable
       permutation groups.
       <br />&nbsp;
  </li> 

  <li> <strong>Homomorphisms for finitely presented groups</strong>
       <em> &nbsp;&nbsp;by Alexander Hulpke,<br/>
       maintained by  
       <mixer person="Alexander Hulpke" data="name_link_city"/>
       </em><br />
       Homomorphism functions for finitely presented groups, using
       rewriting.
       <br />&nbsp;
  </li> 

  <li> <strong>Primitive groups library</strong>
       <em> &nbsp;&nbsp;by Heiko Theissen and Colva Roney-Dougal<br />
       maintained by 
       <mixer person="Colva Roney-Dougal" data="name_link_city"/>
       </em><br />
       Access to the library of primitive permutation groups of small
       degree.
       <br />&nbsp;
  </li> 

  <li> <strong>Partition Backtrack algorithm</strong>
       <em> &nbsp;&nbsp;by Heiko Theissen,<br />
       maintained by 
       <mixer person="Alexander Hulpke" data="name_link_city"/>
       </em><br />
       Backtrack algorithm for finding subgroups or elements of
       permutation groups.
       <br />&nbsp;
  </li> 

  <li> <strong>1-Cohomology and Complements</strong>
       <em> &nbsp;&nbsp;by Frank Celler and Alexander Hulpke,<br />
       maintained by 
       <mixer person="Alexander Hulpke" data="name_link_city"/>
       </em><br />
       Routines for 1-cohomology and complements for solvable normal
       subgroups.
       <br />&nbsp;
  </li> 

  <li> <strong>Rational Functions</strong>
       <em> &nbsp;&nbsp;by Frank Celler and Alexander Hulpke,<br />
       maintained by 
       <mixer person="Alexander Hulpke" data="name_link_city"/>
       </em><br />
       Rational Functions and Polynomials, Arithmetic and
       Factorization.
       <br />&nbsp;
  </li> 

  <li> <strong>Subgroup lattice</strong>
       <em> &nbsp;&nbsp;by Martin Schönert and Alexander Hulpke,<br />
       maintained by 
       <mixer person="Alexander Hulpke" data="name_link_city"/>
       </em><br />
       Cyclic extension algorithm and search for perfect subgroups
       Calculation of normal subgroups.
       <br />&nbsp;
  </li> 

  <li> <strong>Group actions</strong>
       <em> &nbsp;&nbsp;by Heiko Theissen and Alexander Hulpke,<br />
       maintained by 
       <mixer person="Alexander Hulpke" data="name_link_city"/>
       </em><br />
       Methods for orbits, stabilizers, action representatives.
       <br />&nbsp;
  </li> 

  <li> <strong>Finitely presented groups</strong>
       <em> &nbsp;&nbsp;by Volkmar Felsch, Alexander Hulpke, and
       Martin Schönert,<br />
       maintained by
       <mixer person="Alexander Hulpke" data="name_link_city"/>
       </em><br />
       Methods for subgroups and elements of finitely presented
       groups (excludes subgroup presentations and Tietze transformations).
       <br />&nbsp;
  </li> 

  <li> <strong>Subgroup presentations</strong>
       <em> &nbsp;&nbsp;by Volkmar Felsch, <br />
       no official maintainer
       </em><br />
       Subgroup presentations by rewriting.
       <br />&nbsp;
  </li> 

  <li> <strong>Tietze transformations</strong>
       <em> &nbsp;&nbsp;by Volkmar Felsch, <br />
       no official maintainer
       </em><br />
       Tietze transformations.
       <br />&nbsp;
  </li> 

  <li> <strong>Stabilizer Chains</strong>
       <em> &nbsp;&nbsp;by Ákos Seress and Heiko Theissen,<br />
       maintained by 
       <mixer person="Alexander Hulpke" data="name_link_city"/>
       </em><br />
       Routines for stabilizer chains.
       <br />&nbsp;
  </li> 

  <li> <strong>Permutation group homomorphisms</strong>
       <em> &nbsp;&nbsp;by Ákos Seress and Heiko Theissen,<br />
       maintained by 
       <mixer person="Alexander Hulpke" data="name_link_city"/>
       </em><br />
       Routines for stabilizer chains.
       <br />&nbsp;
  </li> 

  <li> <strong>Random Schreier-Sims</strong>
       <em> &nbsp;&nbsp;by Ákos Seress <br />
       no official maintainer
       </em><br />
       Random Schreier-Sims and verification routine.
       <br />&nbsp;
  </li> 

  <li> <strong>Permutation group composition series</strong>
       <em> &nbsp;&nbsp;by Ákos Seress <br />
       no official maintainer
       </em><br />
       Composition series for permutation groups, PCore, Radical.
       <br />&nbsp;
  </li> 

  <li> <strong>Multiplier and Schur cover</strong>
       <em> &nbsp;&nbsp;by Werner Nickel and Alexander Hulpke, <br />
       maintained by
       <mixer person="Alexander Hulpke" data="name_link_city"/>
       </em><br />
       Calculation of multiplier, Schur Cover epimorphism.
       <br />&nbsp;
  </li> 

  <li> <strong>The Help System</strong>
       <em> &nbsp;&nbsp;by Frank Lübeck
       (replacing the file help.g by Frank Celler),<br />
       maintained by 
       <mixer person="Frank Luebeck" data="name_link_city"/>
       </em><br />
       Interface between the GAP help system, manual books and viewer.
       <br />&nbsp;
  </li> 

  <li> <strong>Strings and Characters</strong>
       <em> &nbsp;&nbsp;by Martin Schönert, Frank Celler, Thomas Breuer,
       and Frank Lübeck,<br />
       maintained by 
       <mixer person="Frank Luebeck" data="name_link_city"/>
       </em><br />
       Strings, characters and utilities.
       <br />&nbsp;
  </li> 

  <li> <strong>Classical Groups</strong>
       <em> &nbsp;&nbsp;by Thomas Breuer, Frank Celler, Stefan Kohl,
       Frank Lübeck, and Heiko Theißen,<br />
       maintained by 
       <mixer person="Thomas Breuer" data="name_link_city"/>, 
       <mixer person="Stefan Kohl" data="name_link_city"/>, and 
       <mixer person="Frank Luebeck" data="name_link_city"/>
       </em><br />
       Classical groups as matrix groups and specialized functions
       for them.
       <br />&nbsp;
  </li> 

  <li> <strong>Kernel</strong>
       <em> &nbsp;&nbsp;by Frank Celler, Steve Linton, Frank Lübeck,
       Werner Nickel, and Martin Schönert,<br />
       maintained by 
       <mixer person="Max Horn" data="name_link_city"/>,
       <mixer person="Chris Jefferson" data="name_link_city"/>
       <mixer person="Steve Linton" data="name_link_city"/>,
       <mixer person="Frank Luebeck" data="name_link_city"/>, and 
       <mixer person="Markus Pfeiffer" data="name_link_city"/>
       </em><br />
       Interpreter of GAP-language, user interface, memory management,
       basic data structures and basic operations for them.
       <br />&nbsp;
  </li> 

  <li> <strong>Special Pcgs for finite pc groups</strong>
       <em> &nbsp;&nbsp;by Bettina Eick, <br />
       maintained by 
       <mixer person="Bettina Eick" data="name_link_city"/>.
       </em><br />
       This module contains an algorithm to determine a special
       pcgs for a finite pc group.
       <br />&nbsp;
  </li> 

  <li> <strong>Automorphism groups of finite pc groups</strong>
       <em> &nbsp;&nbsp;by Bettina Eick, <br />
       no official maintainer
       </em><br />
       This module contains an algorithm to determine the automorphism
       group of a finite pc group. The implementation follows the ideas
       of Micheal Smith.
       <br />&nbsp;
  </li> 

  <li> <strong>Twocohomology and extensions of finite pc groups</strong>
       <em> &nbsp;&nbsp;by Bettina Eick, <br />
       maintained by 
       <mixer person="Bettina Eick" data="name_link_city"/>.
       </em><br />
       This module contains methods to compute the second cohomology
       group and extensions of finite pc groups.
       <br />&nbsp;
  </li> 

  <li> <strong>Irreducible Modules over finite fields for finite pc
       groups</strong>
       <em> &nbsp;&nbsp;by Bettina Eick, <br />
       maintained by 
       <mixer person="Bettina Eick" data="name_link_city"/>.
       </em><br />
       This module contains Plesken's algorithm to compute the
       irreducible representations of a finite pc group over a
       finite field.
       <br />&nbsp;
  </li> 

  <li> <strong>Isomorphism testing with random methods</strong>
       <em> &nbsp;&nbsp;by Hans Ulrich Besche and Bettina Eick, <br />
       maintained by 
       <mixer person="Bettina Eick" data="name_link_city"/>.
       </em><br />
       This module contains an algorithm to test isomorphism of
       pc groups using a random method.
       <br />&nbsp;
  </li> 

  <li> <strong>Properties and attributes of finite pc groups</strong>
       <em> &nbsp;&nbsp;by Frank Celler and Bettina Eick, <br />
       no official maintainer
       </em><br />
       This module contains algorithm to test certain properties
       and compute certain attributes of finite pc groups.
       <br />&nbsp;
  </li> 

  <li> <strong>Intersection of subgroups of finite pc groups</strong>
       <em> &nbsp;&nbsp;by Frank Celler and Bettina Eick, <br />
       no official maintainer
       </em><br />
       This module contains an algorithm to compute the intersection
       of subgroups of finite pc groups.
       <br />&nbsp;
  </li> 

  <li> <strong>Finitely presented monoids and semigroups</strong>
       <em> &nbsp;&nbsp;by Isabel Araujo, Derek Holt, Alexander Hulpke,
       Götz Pfeiffer, and Andrew Solomon,<br />
       maintained by 
       <mixer person="James Mitchell" data="name_link_city"/>
       </em><br />
       Code for dealing with finitely presented semigroups and
       monoids, including the implementation of Knuth-Bendix
       and Todd-Coxeter.
       <br />&nbsp;
  </li> 

  <li> <strong>Documentation Utilities</strong>
       <em> &nbsp;&nbsp;by Frank Celler, Heiko Theissen, Alexander Hulpke,
       Willem de Graaf, Steve Linton, Werner Nickel, and Greg Gamble,<br />
       maintained by 
       <mixer person="Greg Gamble" data="name_link_city"/>
       </em><br />
       Elements that produce the on-line text help in GAP, the TeX-
       produced manuals (.dvi, .ps, .pdf) and HTML manuals, and the
       documentation of how these work.
       <br />&nbsp;
  </li> 

  <li> <strong>Binary Relations</strong>
       <em> &nbsp;&nbsp;by Andrew Solomon and Robert F. Morse,<br />
       maintained by
       <mixer person="Robert F. Morse" data="name_link_city"/>
       </em><br />
       This library code provides support for binary relations and
       equivalence relations.
       <br />&nbsp;
  </li> 

  <li> <strong>Congruences of magmas, semigroups and monoids</strong>
       <em> &nbsp;&nbsp;by Andrew Solomon and Robert F. Morse,<br />
       maintained by 
       <mixer person="Robert F. Morse" data="name_link_city"/>
       </em><br />
       This library code computes congruences for a set with one
       binary operator. Faster methods are used when
       associativity is known.
       <br />&nbsp;
  </li> 

  <li> <strong>Semigroup relations</strong>
       <em> &nbsp;&nbsp;by Andrew Solomon, Isabel Araujo, and Robert
       F. Morse,<br />
       maintained by 
       <mixer person="Robert F. Morse" data="name_link_city"/>
       </em><br />
       This library code computes Green's relations of semigroups.
       <br />&nbsp;
  </li> 

  <li> <strong>Transformation semigroups</strong>
       <em> &nbsp;&nbsp;by Andrew Solomon, Isabel Araujo, and Robert
       Arthur,<br />
       maintained by 
       <mixer person="Robert F. Morse" data="name_link_city"/>
       </em><br />
       This library code implements transformations, and methods
       on semigroups represented by them.
       <br />&nbsp;
  </li> 

  <li> <strong>Cyclotomics</strong>
       <em> &nbsp;&nbsp;by Thomas Breuer <br />
        maintained by 
       <mixer person="Thomas Breuer" data="name_link_city"/>
       </em><br />
       Cyclotomics and subfields of cyclotomic fields.
       <br />&nbsp;
  </li> 

  <li> <strong>Lie algebras</strong>
       <em> &nbsp;&nbsp;by Thomas Breuer, Willem de Graaf, Craig Struble,
       and Jürgen Wisliceny,<br />
       maintained by 
       <mixer person="Willem de Graaf" data="name_link_city"/>
       </em><br />
       Functionality for dealing with Lie algebras and their
       representations.
       <br />&nbsp;
  </li> 

  <li> <strong>GAP for MacOS</strong>
       <em> &nbsp;&nbsp;by Burkhard Höfling,<br />
       maintained by 
       <mixer person="Burkhard Hoefling" data="name_link_city"/>
       </em><br />
       This set of files provides the implementation of system dependent
       GAP functions and a user interface to run GAP under MacOS.
       <br />&nbsp;
  </li> 

  <li> <strong>Identification of Galois groups</strong>
       <em> &nbsp;&nbsp;by Alexander Hulpke,<br />
       maintained by 
       <mixer person="Alexander Hulpke" data="name_link_city"/>
       </em><br />
       Functionality for determining the permutation isomorphism type
       of a Galois group.
       <br />&nbsp;
  </li> 

  <li> <strong>Characters and Character Degrees of certain solvable
       groups</strong><br/>
       <em>by Hans Ulrich Besche and Thomas Breuer,<br/>
       maintained by 
       <mixer person="Thomas Breuer" data="name_link_city"/>
       </em><br />
       Computation of irreducible character degrees of solvable groups,
       using the algorithm of Conlon (see [Con90b]),
       and of irreducible characters of (abelian by) supersolvable
       groups, using the algorithms of Baum-Clausen (see [BC94]) and
       Conlon (see [Con90a]).
       <br />&nbsp;
  </li>

  <li> <strong>Possible Permutation Characters</strong><br/>
       <em>by Thomas Breuer and G"otz Pfeiffer,<br/>
       maintained by 
       <mixer person="Thomas Breuer" data="name_link_city"/>
       </em><br />
       Computation of characters that have certain properties of
       permutation characters, as is described in [Bre91].
       <br />&nbsp;
  </li>

  <li> <strong>Possible Class Fusions, Possible Power Maps
       </strong><br/>
       <em>by Thomas Breuer,<br/>
       maintained by 
       <mixer person="Thomas Breuer" data="name_link_city"/>
       </em><br />
       Computation of possible class fusions and possible power
       maps, based on [Bre91], [Bre99].
       <br />&nbsp;
  </li>

  <li> <strong>Monomiality Questions</strong><br/>
       <em>by Thomas Breuer and Erzs'ebet Horv'ath,<br/>
       maintained by 
       <mixer person="Thomas Breuer" data="name_link_city"/>
       </em><br />
       Monomiality of finite (solvable) groups and their characters.
       <br />&nbsp;
  </li>

  <li> <strong>Structure Descriptions for Finite Groups</strong>
       <em> &nbsp;&nbsp;<br/>by GÃ¡bor HorvÃ¡th, Stefan Kohl, Markus PÃ¼schel and
       Sebastian Egner,<br />
       maintained by 
       <mixer person="Gabor Horvath" data="name_link_city"/> and
       <mixer person="Stefan Kohl" data="name_link_city"/>
       </em><br />
       A method for computing structure descriptions for finite groups.
  </li>
</ul>

</mixer>
